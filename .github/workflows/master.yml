name: Deploy to Vercel

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  deployments: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run linting
        run: npm run lint

  unit-test:
    name: Unit Tests
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run unit tests with coverage
        run: npm run test:coverage
      - name: Upload unit test coverage
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: ./coverage
          retention-days: 7

  code-scanning:
    name: CodeQL Scanning
    runs-on: ubuntu-latest
    needs: lint
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
        name: Initialize CodeQL
        with:
          languages: javascript,typescript
      - name: Build project
        run: npm ci
      - uses: github/codeql-action/analyze@v3
        name: Perform CodeQL Analysis

  validate-secrets:
    name: Validate Vercel Secrets
    runs-on: ubuntu-latest
    outputs:
      has-secrets: ${{ steps.check-secrets.outputs.has-secrets }}
    steps:
      - id: check-secrets
        name: Check required secrets
        run: |
          if [[ -n "${{ secrets.VERCEL_TOKEN }}" && -n "${{ secrets.VERCEL_ORG_ID }}" && -n "${{ secrets.VERCEL_PROJECT_ID }}" ]]; then
            echo "has-secrets=true" >> $GITHUB_OUTPUT
          else
            echo "has-secrets=false" >> $GITHUB_OUTPUT
            echo "::warning::Missing required Vercel secrets. VERCEL_TOKEN, VERCEL_ORG_ID, and VERCEL_PROJECT_ID must be set in GitHub secrets. Deployment will be skipped."
          fi

  deploy:
    name: Deploy to Vercel
    needs: [lint, unit-test, code-scanning, validate-secrets]
    if: needs.validate-secrets.outputs.has-secrets == 'true'
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      deployments: write
    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      NODE_OPTIONS: "--max-old-space-size=4096"
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: npm
      - name: Install dependencies
        run: npm ci

      # Cache Next.js build output
      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      # Deploy to Vercel
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          vercel-args: "--prod"

  deploy-skip-notice:
    name: Deployment Skipped Notice
    needs: [validate-secrets]
    if: needs.validate-secrets.outputs.has-secrets != 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Output Skip Notice
        run: |
          echo "::error::Deployment to Vercel was skipped because required secrets are missing."
          echo "Please add VERCEL_TOKEN, VERCEL_ORG_ID, and VERCEL_PROJECT_ID to the repository secrets."
          echo "For instructions, see: https://vercel.com/docs/cli#introduction/vercel-cli-reference/env"

name: Pull Request Workflow

on:
  pull_request:
    branches: [main]
  pull_request_target:
    branches: [main]

# Domyślne uprawnienia dla całego workflow
# (można je usunąć, jeśli ustalisz je tylko na poziomie jobów)
permissions:
  contents: read
  issues: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # 1) Linting na pull_request (read-only token)
  lint:
    name: Lint
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run linting
        run: npm run lint

  # 2) Unit Tests na pull_request (read-only token)
  unit-test:
    name: Unit Tests
    if: ${{ github.event_name == 'pull_request' }}
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run unit tests with coverage
        run: npm run test:coverage
      - name: Upload unit test coverage
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: ./coverage
          retention-days: 7

  # 3) E2E Tests na pull_request (read-only token)
  e2e-test:
    name: E2E Tests
    if: ${{ github.event_name == 'pull_request' }}
    needs: [lint, unit-test]
    runs-on: ubuntu-latest
    environment: test
    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}
      E2E_USERNAME: ${{ secrets.E2E_USERNAME }}
      E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}
      CI: true
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright browsers
        run: npx playwright install chromium
      - name: Run E2E tests
        run: npm run test:e2e -- --update-snapshots
      - name: Upload E2E test results
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

  # 4) CodeQL Scanning (może pozostać na pull_request lub na push)
  code-scanning:
    name: CodeQL Scanning
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript,typescript
      - name: Build project
        run: npm ci
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

name: Pull Request Workflow

on:
  pull_request:
    branches: [main]

# Ensure only one run per PR/ref, cancel in-progress
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run linting
        run: npm run lint

  unit-test:
    name: Unit Tests
    needs: lint
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run unit tests with coverage
        run: npm run test:coverage
      - name: Upload unit test coverage
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: ./coverage
          retention-days: 7

  e2e-test:
    name: E2E Tests
    needs: [lint, unit-test]
    runs-on: ubuntu-latest
    environment: test
    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}
      E2E_USERNAME: ${{ secrets.E2E_USERNAME }}
      E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}
      CI: true
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright browsers
        run: npx playwright install chromium
      - name: Run E2E tests
        run: npm run test:e2e -- --update-snapshots
      - name: Upload E2E test results
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

  code-scanning:
    name: CodeQL Scanning
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript,typescript
      - name: Build project
        run: npm ci
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  status-comment:
    name: PR Status Comment
    needs: [lint, unit-test, e2e-test]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Create or update PR comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## PR Checks ${{ (needs.lint.result == 'success' && needs.unit-test.result == 'success' && needs.e2e-test.result == 'success') && '✅' || '❌' }}

            **Status**: ${{ (needs.lint.result == 'success' && needs.unit-test.result == 'success' && needs.e2e-test.result == 'success') && 'All checks passed!' || 'Some checks failed.' }}

            ### Results:
            - **Lint**: ${{ needs.lint.result }}
            - **Unit Tests**: ${{ needs.unit-test.result }}
            - **E2E Tests**: ${{ needs.e2e-test.result }}

            [View workflow run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

-- Create the reports table
CREATE TABLE reports (
    id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,
    original_text TEXT CHECK (LENGTH(original_text) <= 10000),
    summary TEXT CHECK (LENGTH(summary) <= 10000),
    conclusions TEXT CHECK (LENGTH(conclusions) <= 10000),
    key_data TEXT CHECK (LENGTH(key_data) <= 10000),
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
    updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()
);

-- Create index on user_id for faster lookups
CREATE INDEX idx_reports_user_id ON reports(user_id);

-- Enable Row Level Security (RLS) on the reports table
ALTER TABLE reports ENABLE ROW LEVEL SECURITY;

-- Policy: Allow users to select their own reports
CREATE POLICY "Allow individual read access" ON reports
    FOR SELECT
    USING (auth.uid() = user_id);

-- Policy: Allow users to insert their own reports
CREATE POLICY "Allow individual insert access" ON reports
    FOR INSERT
    WITH CHECK (auth.uid() = user_id);

-- Policy: Allow users to update their own reports
CREATE POLICY "Allow individual update access" ON reports
    FOR UPDATE
    USING (auth.uid() = user_id)
    WITH CHECK (auth.uid() = user_id);

-- Policy: Allow users to delete their own reports
CREATE POLICY "Allow individual delete access" ON reports
    FOR DELETE
    USING (auth.uid() = user_id); 